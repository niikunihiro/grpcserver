swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "User CRUD"
  termsOfService: ""
  contact:
    email: "niidashi@fenfir.co.jp"
host: "localhost"
basePath: "/v1"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "ユーザー情報の作成"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/UserReq"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRes"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: "ユーザー情報の取得"
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRes"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "ユーザー情報の更新"
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/UserRes"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRes"
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "ユーザー情報の削除"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
definitions:
  UserRes:
    type: "object"
    properties:
      user_id:
        type: "integer"
        format: "int64"
        example: 1
      username:
        type: "string"
      email:
        type: "string"
      birth_date:
        type: "string"
        format: "date"
  UserReq:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      birth_date:
        type: "string"
        format: "date"

